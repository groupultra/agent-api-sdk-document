"use strict";(self.webpackChunkagent_api_sdk_document=self.webpackChunkagent_api_sdk_document||[]).push([[6449],{8871:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>o});var s=t(4848),c=t(8453);const i={},d=void 0,r={id:"User/User Action",title:"User Action",description:"Action",source:"@site/versioned_docs/version-1.0.0/User/User Action.md",sourceDirName:"User",slug:"/User/User Action",permalink:"/agent-api-sdk-document/docs/User/User Action",draft:!1,unlisted:!1,tags:[],version:"1.0.0",frontMatter:{},sidebar:"Communication",previous:{title:"User Event",permalink:"/agent-api-sdk-document/docs/User/User Event"},next:{title:"Service",permalink:"/agent-api-sdk-document/docs/Service/"}},a={},o=[{value:"Action",id:"action",level:2},{value:"Button Click",id:"button-click",level:2},{value:"Context Menu Click",id:"context-menu-click",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"action",children:"Action"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"User actions to be handled by the service. On the opposite of User Event (message_up+button_click), these actions are called at a relatively low frequency. Currently the frontend will send all kinds of fetch actions when user opens a channel (or join)."}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"user -> moobius -> service"}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"request"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "type": "action",\n  "request_id": "120cb5bf-a2b3-4d19-b8f4-b2058d7182cc",\n  "user_id": "65202a1d-41cc-4e7b-bc6c-81fa9662076a",\n  "body": {\n    "subtype": "join_channel",\n    "channel_id": "50fb775a-508d-40ef-b80b-de1ef3bf791a",\n    "context": {}\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Field"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Desc"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"type"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:"action"}),(0,s.jsx)(n.td,{children:"Type of the packet"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"request_id"}),(0,s.jsx)(n.td,{children:"uuid"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"user_id"}),(0,s.jsx)(n.td,{children:"uuid"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"body - subtype"}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:'"join_channel" / "leave_channel" / "fetch_characters" / "fetch_buttons" / "fetch_channel_info" / "fetch_canvas" / "fetch_style" / "fetch_context_menu"'}),(0,s.jsx)(n.td,{children:"Fetch and update don't necessarily have a one-to-one relationship. They can be isolated, but we suppose most of the services would offer feasible updates when receiving fetches. Updates notice the frontend to update the webview."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"body - channel_id"}),(0,s.jsx)(n.td,{children:"uuid"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"body - context"}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{children:"Optional"})]})]})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Service received be like:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "type": "action",\n  "user_id": "65202a1d-41cc-4e7b-bc6c-81fa9662076a",\n  "body": {\n    "subtype": "join_channel",\n    "channel_id": "50fb775a-508d-40ef-b80b-de1ef3bf791a",\n    "context": {}\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"button-click",children:"Button Click"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"When a user clicks a button."}),"\n",(0,s.jsx)(n.p,{children:"User -> moobius -> service: moobius acts like a messenger, won't be recorded to db."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "user_id": "65202a1d-41cc-4e7b-bc6c-81fa9662076a",\n  "type": "button_click",\n  "request_id": "65202a1d-41cc-4e7b-bc6c-81fa9662076a",\n  "body": {\n    "button_id": "button_id",\n    "channel_id": "50fb775a-508d-40ef-b80b-de1ef3bf791a",\n    "arguments": [\n      {\n        "name": "arg1",\n        "value": 123\n      },\n      {\n        "name": "arg2",\n        "value": "also could be a string"\n      }\n    ],\n    "context": {}\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Value could be string or int; it's recommended that the frontend verifies these arguments."}),"\n",(0,s.jsx)(n.h2,{id:"context-menu-click",children:"Context Menu Click"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Clicks a button in the right-click menu."}),"\n",(0,s.jsx)(n.p,{children:"User -> moobius -> service: moobius acts like a messenger, won't be recorded to db."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "user_id": "65202a1d-41cc-4e7b-bc6c-81fa9662076a",\n  "type": "menu_click",\n  "request_id": "65202a1d-41cc-4e7b-bc6c-81fa9662076a",\n  "body": {\n    "item_id": "item_id",\n    "channel_id": "50fb775a-508d-40ef-b80b-de1ef3bf791a",\n    "message_id": "35880247-99ba-48c6-8283-b5e87159ce38",\n    "message_subtype": "text",\n    "message_content": {\n      "text": "test message"\n    },\n    "arguments": [\n      {\n        "name": "arg1",\n        "value": 123\n      },\n      {\n        "name": "arg2",\n        "value": "also could be a string"\n      }\n    ],\n    "context": {}\n  }\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Almost the same as above; the only difference is that the message is also passed as context. message_id, message_subtype and message_content describe the message, same as message_down."})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var s=t(6540);const c={},i=s.createContext(c);function d(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:d(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);